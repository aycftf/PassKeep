
import random, os, time, sys, re
from datetime import date


UPPER_CHAR = "FGHIJKLMNPQRSTVWXYZ"
LOWER_CHAR = "dfghijklmpqrstvwxyz"
SPECIAL_CHAR = "!@#$%^,.<#<_=+&*()?></|}:;[+}#$]#^#$&@$^&("

class color:
   PURPLE = '\033[95m'
   CYAN = '\033[96m'
   DARKCYAN = '\033[36m'
   BLUE = '\033[94m'
   GREEN = '\033[92m'
   YELLOW = '\033[93m'
   RED = '\033[91m'
   BOLD = '\033[1m'
   UNDERLINE = '\033[4m'
   END = '\033[0m'

#RANDOMINT = random.randint(20, 72)
#Create a unique string for blank encrypted password file, pre user choice
RANDOMERINT = random.randint(3294832402340230492374,23948320947324732047230472390472309472)

ALLEN = len(UPPER_CHAR) + len(LOWER_CHAR) + len(SPECIAL_CHAR)
#print(ALLEN)

#pat=re.compile('[@_!#$%^&*()<>?/\|}{~:]')
#def addChars(newPass, chars):
    
    
#    upperC = [x for x in newPass if x is x.upper()]
#    lowerC = [x for x in newPass if x is x.lower()]
#    lenUC = len(lowerC) / 2
    
    
#    if chars == "UC" or "uc":
#        for char in newPass:
#            if char.islower() or pat.match(char):
#                newPass[char] == newPass[char.upper()]
        
    
    
    
#    pass





def passGen():
    #Basic error handeling for mis input
    while True:
        try:
            lenn = int(input("Enter the length for your new outputted password here (0-73): "))
            
            #if chosen len for pass is above one, and below the entire length of three lists to loop from
            if lenn >= 1 and lenn <= ALLEN:
                break
            else:
                #Testing cool string interp
                print(f"Please enter a length greater than %s, and less then %s"% (1, ALLEN))
                continue
        
        except ValueError:
            print("no characters allowed, just length of password \n \n")
            continue
        
        
        
        
            
    #Append unique characters to new list
    newPass = []
    subsets = [SPECIAL_CHAR, UPPER_CHAR, LOWER_CHAR ]
    #uc = set()
    ##for val in range to -- len of user input
    while len(newPass) < lenn:
        #print(str(newPass).strip(' '))
        random.shuffle(subsets)
        for sub in subsets: 
            x = random.choice(sub)
            ##If char subset is already used, skip val and use different subset
            if x in newPass:
                subset = random.choice(SPECIAL_CHAR)

                #For next loop, if special char already in appended list
                if subset in newPass:
                    #Loop thru final random set of chars in lower character
                    subset = UPPER_CHAR
                    f = random.choice(subset)
                    if f in newPass:
                        continue
                    
                    
                    else:    
                        #Append random char and continue loop
                        newPass.append(f)

                        continue
                #If  subset var not in list then we append (First loop)
                else:
                    
                    newPass.append(subset)

            else:
                newPass.append(x)
        
    newPass = ''.join(random.sample(newPass, k=lenn))
    #print
    time.sleep(1)
    print(f"\n")
    print(color.BOLD + "Your New Generated Password!!" + color.END)
    print(f"\n")
    return color.CYAN + newPass + color.END








#Create a file with python method open as file arg newPass (str made from before)
def create_file(newPass):


    ##with open new file with appended data as "a"
    with open(f"pass{RANDOMERINT}.gpg", "a") as file:
        #write the passed newPass arg returned from before w/ newline
        file.write(newPass.strip())



#Main for run
def main():
    print(f" \n Password Gen ")
    print(f"\n")
    #var for psasGen fun
    x = passGen()
    print(x)
    print(f"Creating File! pass{RANDOMERINT}.gpg ")
    #grab dir with os.path.isfile
    dir=os.getcwd()
    print(f"New UNENCRYPTED Password File created in {dir}")
    #os library to check for file with isfile method
    check = os.path.exists(f"pass{RANDOMERINT}.gpg")
    
    if check:
        print("File already found within dir, deleting and re creating secure pass....")
        time.sleep(1)
        os.remove(f"pass{RANDOMERINT}.gpg")
        create_file(x)
    else:
        print("Creating File within same directory as script ran from.... ")  ###EXPAND ON LATER FOR OS.DIRECTORY
        create_file(x)
        
        
        

if __name__ == "__main__":
    main()
